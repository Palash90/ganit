function find_even(a){
    let i = 0
    while i < a.len{
        if(a[i]%2==0){
            break
        }else{
            continue
        }
        i++
    }
}

2+3
4+5

exp (i*pi)

A = [ 1, 1, 2; 3, 5, 8; 13, 21, 34 ] // Prints to Console

B = rand (3, 2); // Does not print to console

2 * A

A * B

A' * A // Transpose

x = A \ b

X(2) // Indexing Matrix elements
X(2, 3) // Indexing Matrix elements - Row vs Column
X([1, 3, 4]) // Indexing with another vector
A(2, :) // Indexing wild character

1:3:10 //Range
1:10 // Range Default Value 1

//break and continue statement

A(1:2, 1:2) // Indexing with range

A ./ B // Element wise Operation

while (i <= 10)
  fib (i) = fib (i-1) + fib (i-2);
  i++;
endwhile

function xdot = f (x, t)

// Some Definition of code

end function


if (rem (x, 2) == 0)
  printf ("x is even\n");
else
  printf ("x is odd\n");
endif

if (rem (x, 2) == 0)
  printf ("x is even\n");
elseif (rem (x, 3) == 0)
  printf ("x is odd and divisible by 3\n");
else
  printf ("x is odd\n");
endif

// Support for tensor out of box
